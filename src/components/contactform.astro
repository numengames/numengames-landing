---
import PulseAnimatedBtn from "@components/PulseAnimatedBtn.svelte";
---

<form
	action="https://api.web3forms.com/submit"
	method="POST"
	id="form"
	class="space-y-5"
	novalidate>
	<input
		type="hidden"
		name="access_key"
		value="fca434f5-b15d-49d6-90e5-047ac677fbc4"
	/>
	<input type="checkbox" class="hidden" style="display:none" name="botcheck" />

	<!-- First Name and Last Name -->
	<div class="flex space-x-4">
		<div class="w-full">
			<label
				for="first-name"
				class="block text-xl font-normal tracking-[-0.03em] text-primary-beige mb-4"
				>First Name</label
			>
			<input
				required
				type="text"
				id="first-name"
				name="first-name"
				placeholder="First name"
				class="w-full py-5 px-6 rounded-lg border text-primary-beige outline-none bg-white/5 border-white/10 font-light text-xl placeholder-[#BEBEBE]/50"
			/>
			<div class="text-red-400 text-sm mt-1 hidden empty-feedback">
				Please provide your first name.
			</div>
		</div>
		<div class="w-full">
			<label
				for="last-name"
				class="block text-xl font-normal tracking-[-0.03em] text-primary-beige mb-4"
				>Last Name</label
			>
			<input
				required
				type="text"
				id="last-name"
				name="last-name"
				placeholder="Last name"
				class="w-full py-5 px-6 rounded-lg border text-primary-beige outline-none bg-white/5 border-white/10 font-light text-xl placeholder-[#BEBEBE]/50"
			/>
			<div class="text-red-400 text-sm mt-1 hidden empty-feedback">
				Please provide your last name.
			</div>
		</div>
	</div>

	<!-- Email -->
	<div class="w-full">
		<label
			for="first-name"
			class="block text-xl font-normal tracking-[-0.03em] text-primary-beige mb-4"
			>Work Email</label
		>
		<input
			required
			type="text"
			id="email-address"
			name="email-address"
			placeholder="Email Address"
			class="w-full py-5 px-6 rounded-lg border text-primary-beige outline-none bg-white/5 border-white/10 font-light text-xl placeholder-[#BEBEBE]/50"
		/>
		<div class="text-red-400 text-sm mt-1 hidden empty-feedback">
			Please provide your email address.
		</div>
		<div class="text-red-400 text-sm mt-1 hidden invalid-feedback">
			Please provide a valid email address.
		</div>
	</div>

	<!-- Project Description -->
	<div>
		<label
			for="last-name"
			class="block text-xl font-normal tracking-[-0.03em] text-primary-beige mb-4"
			>What do you want to build?</label
		>
		<textarea
			name="project-description"
			required
			placeholder="What do you want to build?"
			class="w-full px-4 py-3 border-2 font-light placeholder-[#BEBEBE]/50 text-xl rounded-md outline-none h-36 focus:ring-4 focus:border-gray-600 bg-white/5 border-white/10 text-primary-beige"
		></textarea>
		<div class="text-red-400 text-sm mt-1 hidden empty-feedback">
			Please enter your project description.
		</div>
	</div>

	<!-- Budget -->
	<div>
		<label
			class="block text-xl font-normal tracking-[-0.03em] text-primary-beige mb-4"
			>Whatâ€™s your project budget?</label
		>
		<div class="flex space-x-4 mt-3">
			<label
				class="flex items-center justify-center w-full py-5 px-6 rounded-lg bg-white/5 border-white/10 text-primary-beige font-light text-xl relative cursor-pointer">
				<input
					type="radio"
					name="budget"
					value="2k-to-5k"
					class="hidden"
					required
				/>
				<span class="checkmark"></span>
				<span class="lbl-check">$15k to $30k</span>
			</label>
			<label
				class="flex items-center justify-center w-full py-5 px-6 rounded-lg bg-white/5 border-white/10 text-primary-beige font-light text-xl relative cursor-pointer">
				<input
					type="radio"
					name="budget"
					value="5k-to-10k"
					class="hidden"
					required
				/>
				<span class="checkmark"></span>
				<span class="lbl-check">$30k to $60k</span>
			</label>
			<label
				class="flex items-center justify-center w-full py-5 px-6 rounded-lg bg-white/5 border-white/10 font-light text-xl relative text-center cursor-pointer">
				<input
					type="radio"
					name="budget"
					value="over-10k"
					class="hidden"
					required
				/>
				<span class="checkmark"></span>
				<span class="lbl-check text-primary-beige">over $60k</span>
			</label>
		</div>
	</div>
	<style>
		input[type="radio"]:checked + .checkmark {
			border: 2px solid #f35059;
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			border-radius: 8px;
		}

		input[type="radio"]:checked ~ .lbl-check {
			color: #f35059;
		}
	</style>

	<!-- Terms and Conditions -->
	<div class="flex items-center space-x-2 mt-6 text-lg">
		<input
			type="checkbox"
			name="terms"
			id="terms"
			class="text-primary-coralRed"
			required
		/>
		<label for="terms" class="font-light text-primary-beige">
			I agree to Numen Games
			<a href="#" class="text-primary-coralRed">Terms and Conditions</a>
		</label>
	</div>

	<!-- Submit Button -->
	<PulseAnimatedBtn
		className="text-[1.2rem] form-toggle-button text-primary-beige"
		text="Submit"
	/>

	<!-- Result -->
	<div id="result" class="mt-3 text-center"></div>
</form>

<script is:inline>
	const form = document.getElementById("form");
	const result = document.getElementById("result");

	form.addEventListener("submit", function (e) {
		e.preventDefault();
		form.classList.add("was-validated");

		if (!form.checkValidity()) {
			form.querySelectorAll(":invalid")[0].focus();
			return;
		}

		const formData = new FormData(form);
		const object = Object.fromEntries(formData);
		const json = JSON.stringify(object);

		result.innerHTML = "Sending...";

		fetch("https://api.web3forms.com/submit", {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				Accept: "application/json",
			},
			body: json,
		})
			.then(async (response) => {
				const json = await response.json();
				if (response.status === 200) {
					result.classList.add("text-green-500");
					result.innerHTML = json.message;
				} else {
					result.classList.add("text-red-500");
					result.innerHTML = json.message;
				}
			})
			.catch((error) => {
				console.error(error);
				result.innerHTML = "Something went wrong!";
			})
			.finally(() => {
				form.reset();
				form.classList.remove("was-validated");
				setTimeout(() => {
					result.style.display = "none";
				}, 5000);
			});
	});
</script>

<style>
	.invalid-feedback,
	.empty-feedback {
		display: none;
	}

	.was-validated :placeholder-shown:invalid ~ .empty-feedback {
		display: block;
	}

	.was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
		display: block;
	}

	.is-invalid,
	.was-validated :invalid {
		border-color: #dc3545;
	}
</style>
